version: "3.7"

services:
  client:
    build:
      context: ./frontend
      dockerfile: Dockerfile-prod
    ports:
      - "80:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - frontend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    links:
      - db
    networks:
      - frontend
      - backend
  worker:
    build:
      context: ./celery-queue
      dockerfile: Dockerfile
    depends_on:
      - redis
    volumes: ["./celery-queue:/queue"]
    networks:
      - backend
  monitor:
    build:
      context: ./celery-queue
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    entrypoint: flower
    command: -A tasks --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - redis
    volumes: ["./celery-queue:/queue"]
    networks:
      - backend
  redis:
    image: redis
    networks:
      - backend
  db:
    container_name: mysql
    image: mysql/mysql-server:latest
    ports:
      - "32000:3306"
    volumes:
      - ./db/mysql-init-file:/docker-entrypoint-initdb.d/:ro
      - ./db/data:/var/lib/mysql
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
